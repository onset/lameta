{
  productName: "lameta",
  appId: "com.github.lameta.lameta",
  afterSign: "electron-builder-notarize",
  dmg: {
    contents: [
      {
        x: 410,
        y: 150,
        type: "link",
        path: "/Applications"
      },
      {
        x: 130,
        y: 150,
        type: "file"
      }
    ]
  },
  files: [
    /* I started on this because it seems crazy to include it (most should be bundled into index.js),
   but actually it's one thing after another that something at runtime is expecting to find.
    "!node_modules",
    "node_modules/electron",
    "node_modules/electron-store",
    "node_modules/@electron-toolkit",
    "node_modules/conf",
    */

    // Note, I have so far not been able to prevent two copies of all 5 ffprobe.exe's from being
    // included, despite much effort. One copy of each goes into app.asar,
    // one goes into app.asar.unpacked (this is the default electron-builder for all exe files,
    // I haven't figured out how to override that.)
    // electron-builder just doesn't seem to honor the filter rules.

    // some of the bigger packages that we don't need. Drops installer by about 9 meg
    "!node_modules/@mui",
    "!node_modules/@reduxjs",
    "!node_modules/xlsx",
    "!node_modules/trie-search",
    "index.html",
    "package.json",
    "index*.js",
    {
      from: "assets/",
      // "dist/" is the base directory (index.html is there), so the paths work out more simply if assets are there too. Then we can just say src="assets/whatever.png" in the html.
      to: "dist/assets"
    },
    "dist/",
    "locale/",
    "archive-configurations/",
    "schemas/",
    "sample data/",
    // we only want ffprobe, not ffmpeg
    "!node_modules/ffmpeg-ffprobe-static/ffmpeg*",
    "!node_modules/ffmpeg-ffprobe-static/bin/*/ffmpeg*"
  ],
  extraFiles: [],
  directories: {
    buildResources: "resources",
    output: "release"
  },
  win: {
    target: "nsis",
    icon: "build/windows.ico",
    fileAssociations: [
      {
        ext: "sprj",
        name: "lameta/saymore project"
      }
    ]
  },
  nsis: {
    artifactName: "${productName} Windows Setup ${version}.${ext}"
  },
  mac: {
    target: { target: "default", arch: ["universal"] },
    icon: "build/mac.icns",
    hardenedRuntime: true,
    artifactName: "${productName}-mac-${version}.${ext}",

    fileAssociations: [
      {
        ext: "sprj",
        name: "lameta/saymore project",
        role: "Editor"
      }
    ],
    notarize: {
      teamId: "6VW9W5DFMP"
    }
  },
  linux: {
    target: ["deb", "AppImage"],
    category: "science",
    description: "A metadata tool to help with organising collections of files. It is mainly aimed at collections made in the course of documenting language, music, and other cultural expressions.",
    fileAssociations: [
      {
        ext: "sprj",
        name: "lameta/saymore project"
      }
    ]
  }
}
